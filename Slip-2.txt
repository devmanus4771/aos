//Q.1) Write a C program to find file properties such as inode number, number of hard link, File
permissions, File size, File access and modification time and so on of a given file using stat()
system call. 
#include<stdio.h> #include<stdlib.h> #include<sys/stat.h> #include<sys/types.h> #include<time.h>
#include<fcntl.h>
int main(int argc, char const *argv[]) {
if(argc != 2) {
fprintf(stderr, "usage : %s <filepath>\n", argv[0]); return 1; }
int file = open(argv[1], O_RDONLY); if(file < 0)
{
fprintf(stderr, "error opening file\n");return 1; }
struct stat st; if(fstat(file, &st) < 0) {
fprintf(stderr, "error reading file info\n"); return 1;
}
printf("File Name is : %s \n", argv[1]);
printf("File size : %ld\n", st.st_size);
printf("Number of hard links : %d\n", st.st_nlink);
printf("File inode : %ld\n", st.st_ino);
printf("File Permissions : ");
printf(S_ISDIR(st.st_mode) ? "d" : "-");
printf((st.st_mode & S_IRUSR) ? "r" : "-");
printf((st.st_mode & S_IWUSR) ? "w" : "-");
printf((st.st_mode & S_IXUSR) ? "x" : "-");
printf((st.st_mode & S_IRGRP) ? "r" : "-");
printf((st.st_mode & S_IWGRP) ? "w" : "-");
printf((st.st_mode & S_IXGRP) ? "x" : "-");
printf((st.st_mode & S_IROTH) ? "r" : "-");
printf((st.st_mode & S_IWOTH) ? "w" : "-");
printf((st.st_mode & S_IXOTH) ? "x" : "-");
printf("\n");
char timestr[50];
struct tm *modified_time = localtime(&st.st_mtime); strftime(timestr, 80, "%b %d %l:%M %p",
modified_time); printf("Modified time : %s\n", timestr);struct tm *access_time =
localtime(&st.st_atime); strftime(timestr, 80, "%b %d %l:%M %p", access_time); printf("Access time :
%s\n", timestr);
return 0; }

//Q.2) Write a C program that catches the ctrl-c (SIGINT) signal for the first time and display the
appropriate message and exits on pressing ctrl-c again.
#include<stdio.h> #include<stdlib.h> #include<signal.h> #include<unistd.h> void sigint()
{
write(STDOUT_FILENO, "Press Ctrl + C once again to exit",1); signal(SIGINT, SIG_DFL);
}
void main() {
signal(SIGINT, sigint); while(1){
printf("Hello"); }